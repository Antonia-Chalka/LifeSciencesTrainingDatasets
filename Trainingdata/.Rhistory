Corvidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Corvidae')
Cracidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Cracidae')
Cuculidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Cuculidae')
Estrildidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Estrildidae')
Falconidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Falconidae')
Fregatidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Fregatidae')
Fringillidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Fringillidae')
Gaviidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Gaviidae')
Gruidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Gruidae')
Haematopodidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Haematopodidae')
Hirundinidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Hirundinidae')
Hydrobatidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Hydrobatidae')
Icteridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Icteridae')
Icteriidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Icteriidae')
Jacanidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Jacanidae')
Laniidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Laniidae')
Laridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Laridae')
Mimidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Mimidae')
Motacillidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Motacillidae')
Numididae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Numididae')
Odontophoridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Odontophoridae')
Pandionidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Pandionidae')
Paridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Paridae')
Parulidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Parulidae')
Passerellidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Passerellidae')
Passeridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Passeridae')
Pelecanidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Pelecanidae')
Phalacrocoracidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Phalacrocoracidae')
Phasianidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Phasianidae')
Picidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Picidae')
Podicipedidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Podicipedidae')
Polioptilidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Polioptilidae')
Psittacidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Psittacidae')
Psittaculidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Psittaculidae')
Ptiliogonatidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Ptiliogonatidae')
Pycnonotidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Pycnonotidae')
Rallidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Rallidae')
Recurvirostridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Recurvirostridae')
Regulidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Regulidae')
Remizidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Remizidae')
Scolopacidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Scolopacidae')
Sittidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Sittidae')
Stercorariidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Stercorariidae')
Strigidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Strigidae')
Sturnidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Sturnidae')
Sulidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Sulidae')
Thraupidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Thraupidae')
Threskiornithidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Threskiornithidae')
Tityridae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Tityridae')
Trochilidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Trochilidae')
Troglodytidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Troglodytidae')
Trogonidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Trogonidae')
Turdidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Turdidae')
Tyrannidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Tyrannidae')
Tytonidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Tytonidae')
Vireonidae <- sum(Bird_Sighting_Texas_2018$taxon_family_name == 'Vireonidae')
#Logic tests to count each appearance of the avian families
Family <- c('Accipitridae', 'Aegithalidae', 'Alaudidae', 'Alcedinidae', 'Anatidae', 'Anhingidae', 'Apodidae', 'Ardeidae', 'Bombycillidae', 'Cacatuidae', 'Calcariidae', 'Caprimulgidae', 'Cardinalidae', 'Cathartidae', 'Certhiidae', 'Charadriidae', 'Ciconiidae', 'Columbidae', 'Corvidae', 'Cracidae', 'Cuculidae', 'Estrildidae', 'Falconidae', 'Fregatidae', 'Fringillidae', 'Gaviidae', 'Gruidae', 'Haematopodidae', 'Hirundinidae', 'Hydrobatidae', 'Icteridae', 'Icteriidae', 'Jacanidae', 'Laniidae', 'Laridae', 'Mimidae', 'Motacillidae', 'Numididae', 'Odontophoridae', 'Pandionidae', 'Paridae', 'Parulidae', 'Passerellidae', 'Passeridae', 'Pelecanidae', 'Phalacrocoracidae', 'Phasianidae', 'Picidae', 'Podicipedidae', 'Polioptilidae', 'Psittacidae', 'Psittaculidae', 'Ptiliogonatidae', 'Pycnonotidae', 'Rallidae', 'Recurvirostridae', 'Regulidae', 'Remizidae', 'Scolopacidae', 'Sittidae', 'Stercorariidae', 'Strigidae', 'Sturnidae', 'Sulidae', 'Thraupidae', 'Threskiornithidae', 'Tityridae', 'Trochilidae', 'Troglodytidae', 'Trogonidae', 'Turdidae', 'Tyrannidae', 'Tytonidae', 'Vireonidae')
#Assigns all family names as a vector
Numbers <- c(5309, 15, 38, 602, 10487, 254, 71, 9544, 696, 3, 4, 275, 5017, 2510, 58, 1445, 82, 4363, 2120, 190, 654, 77, 1521, 24, 2545, 63, 304, 143, 1080, 1, 5291, 66, 4, 458, 2788, 2854, 170, 10, 211, 600, 1650, 3668, 5639, 1132, 1346, 1294, 587, 3220, 930, 247, 245, 4, 26, 13, 1491, 616, 624, 63, 3374, 141, 1, 942, 755, 45, 16, 1103, 3, 977, 1473, 10, 2795, 4579, 50, 635)
#Assigns each of the discovered appearance numbers to its own vector
Texas.family <- data.frame(Family = Family, Number.seen = Numbers)
#Combines the two previous vectors into one data-frame and name assigned
attach(Texas.family)
#Combines the two previous vectors into one data-frame and name assigned
attach(Texas.family)
#attached to R search path
par(mar = c(2,4,2,2))
#adjusts plot margins (bottom, left, top, right)
barplot(Texas.family$Number.seen, names.arg = Texas.family$Family, main = 'Bird families seen in Texas 2018', horiz = TRUE, cex.names = 0.25, las = 1, cex.axis = 0.8, xlim = c(0,12000))
#plots all families against number seen, not the most readable graph
Texas.family <- Texas.family[order(-Texas.family$Number.seen),]
#resorts by descending number seen
head(Texas.family, 10)
#displays the top 10 values
Top.Ten <- subset(Texas.family, Number.seen >= 3374)
#puts the top 10 in it's own data set
par(mar = c(4,7,4,3))
#alters the margins to better suit graph
colours <- c('red','pink','orange','yellow','dark green','blue','purple','violet','light grey','black')
#Creates a rainbow vector for graph colouring
barplot(Top.Ten$Number.seen, names.arg = Top.Ten$Family, main = 'Top 10 most commonly sighted bird families, Texas 2018', horiz = TRUE, las = 1, xlim = c(0,12000), cex.main = 0.9, xlab = 'Number seen', col = colours)
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
load("~/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
View(`Biomass_of_Herbiverous_Fish_(Abobrinha)`)
View(`Biomass_of_Herbiverous_Fish_(Abobrinha)`)
Biomass_of_Herbiverous_Fish <- read.delim("~/R/Graph Data/Biomass_of_Herbiverous_Fish.txt")
View(Biomass_of_Herbiverous_Fish)
library(devtools)
library(usethis)
library(devtools)
use_data(Biomass_of_Herbiverous_Fish)
load("~/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
#Sorts data by deep mean descending
barplot(Biomass.Deep$D.mean, names.arg = Biomass.Deep$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Deep')
#Plots the average Biomass of reef species found within the deep environment
Biomass.Shallow <- Biomass[order(-Biomass$S.mean),]
#Plots the average Biomass of reef species found within the deep environment
Biomass.Shallow <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$S.mean),]
#Sorts data by shallow mean descending
barplot(Biomass.Shallow$S.mean, names.arg = Biomass.Shallow$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Shallow')
plot(Brain.bodyweight$Body.weight..kg., Brain.bodyweight$Brain.weight..g., main = 'Scatter of Brain vs Body-weight')
load("~/R/Trainingdata/data/Brain_Bodyweight.rda")
plot(Brain.bodyweight$Body.weight..kg., Brain.bodyweight$Brain.weight..g., main = 'Scatter of Brain vs Body-weight')
View(Brain_Bodyweight)
plot(Brain_Bodyweight$Body.weight..kg., Brain_Bodyweight$Brain.weight..g., main = 'Scatter of Brain vs Body-weight')
#simple scatter-plot of unmodified values, not very useful therefore, using the logged data is preferable
Brain_Bodyweight <- Brain_Bodyweight[order(Brain_Bodyweight$Log.body.weight..kg.),]
#orders the data-frame by body-weight ascending
plot(x = Brain_Bodyweight$log.brain, y = Brain_Bodyweight$log.body, type = 'l', col= 'red', lwd=2, xlab = 'Log brain-weight', ylab = 'Log body-weight')
#line showing correlation between logged brain and body weight
points(x = Brain_Bodyweight$log.brain, y = Brain_Bodyweight$log.body, col = 'black', pch = 16)
#adds the points of each animals values
text(Brain_Bodyweight$log.brain, Brain_Bodyweight$log.body, labels = Brain_Bodyweight$Species, cex = 0.6, pos = 1)
load("~/R/Trainingdata/data/Child_Variants.rda")
View(Child_Variants)
mean(Child_Variants$MutantReadPercent)
#returns mean of the mutant percent column
logic.child <- Child_Variants$MutantReadPercent >=70
#logic test that informs us which values and therefore rows have mutant reads over 70%
filter.child <- Child_Variants[logic.child,]
#creates a new data-frame with just those TRUE values from the logic test preformed prior
sum(filter.child$REF == 'G')
sum(filter.child$REF == 'A')
sum(filter.child$REF == 'T')
sum(filter.child$REF == 'C')
#sums the mutation counts for each base
mutation.counts <- c(2347,2584,2616,2288)
#places the summed counts into a vector
hist(Child_Variants$MutantReadPercent, breaks = 40, main = 'Mutation frequency Histogram', ylim = c(0, 2000), xlab = 'Mutant Read Percent')
#plots the mutant reads column
boxplot(Child_Variants$MutantReadPercent)
boxplot(filter.child$MutantReadPercent)
#plots of overall distribution and the filtered set
colours.graph <- c('black','green','red','blue')
barplot(mutation.counts, col=colours.graph, names.arg = c('G','A','T','C'), ylim = c(0, 3000))
load("~/R/Trainingdata/data/Childrens_Indoor_Hobbies_During_Covid.19.rda")
load("~/R/Trainingdata/data/Childrens_Outdoor_Hobbies_During_Covid.19.rda")
par(mfrow = c(2,1), mar = c(0,5,0,2))
#alters margins and allows for two plots to be displayed
pie(Indoor.data$X., labels = Indoor.data$Hobby, cex = 0.6)
#alters margins and allows for two plots to be displayed
pie(Childrens_Indoor_Hobbies_During_Covid-19$X., labels = Childrens_Indoor_Hobbies_During_Covid-19$Hobby, cex = 0.6)
Childrens_Indoor_Hobbies_During_Lockdown <- read.delim("~/R/Graph Data/Childrens_Indoor_Hobbies_During_Lockdown.txt")
View(Childrens_Indoor_Hobbies_During_Lockdown)
Childrens_Outdoor_Hobbies_During_Lockdown <- read.delim("~/R/Graph Data/Childrens_Outdoor_Hobbies_During_Lockdown.txt")
View(Childrens_Outdoor_Hobbies_During_Lockdown)
par(mfrow = c(2,1), mar = c(0,5,0,2))
#alters margins and allows for two plots to be displayed
pie(Childrens_Indoor_Hobbies_During_Lockdown$X., labels = Childrens_Indoor_Hobbies_During_Lockdown$Hobby, cex = 0.6)
pie(Childrens_Outdoor_Hobbies_During_Lockdown$X., labels = Childrens_Outdoor_Hobbies_During_Lockdown$Outdoor.Hobby, cex = 0.7)
Childrens_Indoor_Hobbies_During_Lockdown <- read.delim("~/R/Graph Data/Childrens_Indoor_Hobbies_During_Lockdown.txt")
View(Childrens_Indoor_Hobbies_During_Lockdown)
Childrens_Outdoor_Hobbies_During_Lockdown <- read.delim("~/R/Graph Data/Childrens_Outdoor_Hobbies_During_Lockdown.txt")
View(Childrens_Outdoor_Hobbies_During_Lockdown)
use_data(Childrens_Indoor_Hobbies_During_Lockdown)
use_data(Childrens_Outdoor_Hobbies_During_Lockdown)
load("~/R/Trainingdata/data/Cuttlefish_Buoyancy.rda")
View(Cuttlefish_Buoyancy)
#Control + Non-Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'C') -> Cuttlefish_Buoyancy.control
#isolates the cuttlefish who did not receive the CO2 treatment and were in control waters
Cuttlefish_Buoyancy.control.non <- subset(Cuttlefish_Buoyancy.control, Cuttlefish_Buoyancy.control$feeding == 0)
#further splits the data-set into those who were not fed or treated with CO2
Cuttlefish.days.non <- Cuttlefish_Buoyancy.control.non$days_until_hatching_trt
Cuttlefish.floaters.non <- Cuttlefish_Buoyancy.control.non$floating
#puts the days of the experiment and the record of floaters into their own vectors
Cuttlefish.control.non <- data.frame(Cuttlefish.days.non, Cuttlefish.floaters.non)
#creates an independent data-frame for our two newly created vectors
Cuttlefish.control.non <- Cuttlefish.control.non[order(Cuttlefish.control.non$Cuttlefish.days.non),]
#the data-frame is then sorted in order of ascending days so that time can be plotted chronologically
plot(x = Cuttlefish.control.non$Cuttlefish.days.non, y = (cumsum(Cuttlefish.control.non$Cuttlefish.floaters.non)/nrow(Cuttlefish.control.non)), type = 'l', col= 'blue', lwd=2, ylim = c(0,1), xlab = 'Days after hatching', ylab = '% Floaters')
#plots the days of the experiment against the cumulative sum of floaters, expressed as a percentage of the whole group
points(x = Cuttlefish.control.non$Cuttlefish.days.non, y = (cumsum(Cuttlefish.control.non$Cuttlefish.floaters.non)/nrow(Cuttlefish.control.non)), col = 'blue')
#Control + Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'C') -> Cuttlefish_Buoyancy.control
Cuttlefish_Buoyancy.control.fed <- subset(Cuttlefish_Buoyancy.control, Cuttlefish_Buoyancy.control$feeding == 1)
Cuttlefish.days.fed <- Cuttlefish_Buoyancy.control.fed$days_until_hatching_trt
Cuttlefish.floaters.fed <- Cuttlefish_Buoyancy.control.fed$floating
Cuttlefish.control.fed <- data.frame(Cuttlefish.days.fed, Cuttlefish.floaters.fed)
Cuttlefish.control.fed <- Cuttlefish.control.fed[order(Cuttlefish.control.fed$Cuttlefish.days.fed),]
points(x = Cuttlefish.control.fed$Cuttlefish.days.fed, y = (cumsum(Cuttlefish.control.fed$Cuttlefish.floaters.fed)/nrow(Cuttlefish.control.fed)), col = 'red')
lines(x = Cuttlefish.control.fed$Cuttlefish.days.fed, y = (cumsum(Cuttlefish.control.fed$Cuttlefish.floaters.fed)/nrow(Cuttlefish.control.fed)), col = 'red')
#Treatment + Non-Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'A') -> Cuttlefish_Buoyancy.treatment
Cuttlefish_Buoyancy.treatment.non <- subset(Cuttlefish_Buoyancy.treatment, Cuttlefish_Buoyancy.treatment$feeding == 0)
Cuttlefish.treatment.days.non <- Cuttlefish_Buoyancy.treatment.non$days_until_hatching_trt
Cuttlefish.treatment.floaters.non <- Cuttlefish_Buoyancy.treatment.non$floating
Cuttlefish.treatment.non <- data.frame(Cuttlefish.treatment.days.non, Cuttlefish.treatment.floaters.non)
Cuttlefish.treatment.non <- Cuttlefish.treatment.non[order(Cuttlefish.treatment.non$Cuttlefish.treatment.days.non),]
points(x = Cuttlefish.treatment.non$Cuttlefish.treatment.days.non, y = (cumsum(Cuttlefish.treatment.non$Cuttlefish.treatment.floaters.non)/nrow(Cuttlefish.treatment.non)), col = 'green')
lines(x = Cuttlefish.treatment.non$Cuttlefish.treatment.days.non, y = (cumsum(Cuttlefish.treatment.non$Cuttlefish.treatment.floaters.non)/nrow(Cuttlefish.treatment.non)), col = 'green')
#Treatment + Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'A') -> Cuttlefish_Buoyancy.treatment
Cuttlefish_Buoyancy.treatment.fed <- subset(Cuttlefish_Buoyancy.treatment, Cuttlefish_Buoyancy.treatment$feeding == 1)
Cuttlefish.treatment.days.fed <- Cuttlefish_Buoyancy.treatment.fed$days_until_hatching_trt
Cuttlefish.treatment.floaters.fed <- Cuttlefish_Buoyancy.treatment.fed$floating
Cuttlefish.treatment.fed <- data.frame(Cuttlefish.treatment.days.fed, Cuttlefish.treatment.floaters.fed)
Cuttlefish.treatment.fed <- Cuttlefish.treatment.fed[order(Cuttlefish.treatment.fed$Cuttlefish.treatment.days.fed),]
points(x = Cuttlefish.treatment.fed$Cuttlefish.treatment.days.fed, y = (cumsum(Cuttlefish.treatment.fed$Cuttlefish.treatment.floaters.fed)/nrow(Cuttlefish.treatment.fed)), col = 'orange')
lines(x = Cuttlefish.treatment.fed$Cuttlefish.treatment.days.fed, y = (cumsum(Cuttlefish.treatment.fed$Cuttlefish.treatment.floaters.fed)/nrow(Cuttlefish.treatment.fed)), col = 'orange')
legend(5, 0.9, legend = c('C+NF','C+F','T+NF','T+F'), col = c('blue','red','green','orange'), pch=15)
#legend is added so that lines can be identified and therefore data compared
#legend is added so that lines can be identified and therefore data compared
#legend is added so that lines can be identified and therefore data compared
#legend is added so that lines can be identified and therefore data compared
load("~/R/Trainingdata/data/Modern_Pollen_Plant_Diversity_Relationships.rda")
View(Modern_Pollen_Plant_Diversity_Relationships)
Woody.data <- subset(Modern_Pollen_Plant_Diversity_Relationships, Modern_Pollen_Plant_Diversity_Relationships$Growth.form == 'Woody')
Herb.data <- subset(Modern_Pollen_Plant_Diversity_Relationships, Modern_Pollen_Plant_Diversity_Relationships$Growth.form == 'Herbaceous')
min <- 0
max <- 1500
plot(x = Herb.data$Clonality, y = Herb.data$Seed.weight..mg., main = 'Does clonality affect seed weight', xlab = 'Clonality', ylab = 'Log Seed weight (mg)', pch = 19, frame = FALSE, col = 'red', xlim = c(0, 1), ylim = c(min, log10(max)))
plot(x = Woody.data$Clonality, y = Woody.data$Seed.weight..mg., main = 'Does clonality affect seed weight', xlab = 'Clonality', ylab = 'Log Seed weight (mg)', pch = 19, frame = FALSE, col = 'blue', xlim = c(0, 1), ylim = c(0, log(2700)))
load("~/R/Trainingdata/data/Neutrophils.rda")
boxplot(Neutrophils, main='Neutrophils')
barplot(colMeans(neutrophils, na.rm = TRUE, dims = 1))
barplot(colMeans(Neutrophils, na.rm = TRUE, dims = 1))
load("~/R/Trainingdata/data/Plant_CO2_Uptake.rda")
View(Plant_CO2_Uptake)
Quebec.data <- subset(Plant_Co2_Uptake, Plant_Co2_Uptake$Type == 'Quebec')
Quebec.data <- subset(Plant_CO2_Uptake, Plant_CO2_Uptake$Type == 'Quebec')
Mississippi.data <- subset(Plant_CO2_Uptake, Plant_CO2_Uptake$Type == 'Mississippi')
Quebec.chilled <- subset(Quebec.data, Quebec.data$Treatment == 'chilled')
Quebec.nonchilled <- subset(Quebec.data, Quebec.data$Treatment == 'nonchilled')
Mississippi.chilled <- subset(Mississippi.data, Mississippi.data$Treatment == 'chilled')
Mississippi.nonchilled <- subset(Mississippi.data, Mississippi.data$Treatment == 'nonchilled')
Quebec.chilled <- Quebec.chilled[order(Quebec.chilled$Plant),]
Quebec.nonchilled <- Quebec.nonchilled[order(Quebec.nonchilled$Plant),]
Mississippi.chilled <- Mississippi.chilled[order(Mississippi.chilled$uptake),]
Mississippi.nonchilled <- Mississippi.nonchilled[order(Mississippi.nonchilled$uptake),]
barplot(Quebec.chilled$uptake, names.arg = Quebec.chilled$Plant, main = 'Quebec chill treatment',cex.names = 0.8, las = 2)
par(mar = c(5,5,3,1))
barplot(Quebec.nonchilled$uptake, names.arg = Quebec.nonchilled$Plant, cex.names = 0.8, las = 2, main = 'Quebec non-chilled treatment')
plot(x = Quebec.nonchilled$conc, y = Quebec.nonchilled$uptake, col = 'red')
points(x = Quebec.chilled$conc, y = Quebec.chilled$uptake, col = 'blue')
text(Quebec.nonchilled$conc, y = Quebec.nonchilled$uptak, labels = Quebec.nonchilled$Plant, col = 'red', cex = 0.7, pos = 2)
text(x = Quebec.chilled$conc, y = Quebec.chilled$uptake, labels = Quebec.chilled$Plant, col = 'blue', cex = 0.7, pos = 2)
load("~/R/Trainingdata/data/Sleep_Deprivation_CSD.rda")
View(Sleep_Deprivation_CSD)
barplot(Sleep_Deprivation_CSD$Mean.CSD.Threshold, names.arg = Sleep_Deprivation_CSD$Group, cex.names = 1)
load("~/R/Trainingdata/data/Cuttlefish_Buoyancy.rda")
#Control + Non-Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'C') -> Cuttlefish_Buoyancy.control
#isolates the cuttlefish who did not receive the CO2 treatment and were in control waters
Cuttlefish_Buoyancy.control.non <- subset(Cuttlefish_Buoyancy.control, Cuttlefish_Buoyancy.control$feeding == 0)
#further splits the data-set into those who were not fed or treated with CO2
Cuttlefish.days.non <- Cuttlefish_Buoyancy.control.non$days_until_hatching_trt
Cuttlefish.floaters.non <- Cuttlefish_Buoyancy.control.non$floating
#puts the days of the experiment and the record of floaters into their own vectors
Cuttlefish.control.non <- data.frame(Cuttlefish.days.non, Cuttlefish.floaters.non)
#creates an independent data-frame for our two newly created vectors
Cuttlefish.control.non <- Cuttlefish.control.non[order(Cuttlefish.control.non$Cuttlefish.days.non),]
#the data-frame is then sorted in order of ascending days so that time can be plotted chronologically
plot(x = Cuttlefish.control.non$Cuttlefish.days.non, y = (cumsum(Cuttlefish.control.non$Cuttlefish.floaters.non)/nrow(Cuttlefish.control.non)), type = 'l', col= 'blue', lwd=2, ylim = c(0,1), xlab = 'Days after hatching', ylab = '% Floaters')
#plots the days of the experiment against the cumulative sum of floaters, expressed as a percentage of the whole group
points(x = Cuttlefish.control.non$Cuttlefish.days.non, y = (cumsum(Cuttlefish.control.non$Cuttlefish.floaters.non)/nrow(Cuttlefish.control.non)), col = 'blue')
#Control + Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'C') -> Cuttlefish_Buoyancy.control
Cuttlefish_Buoyancy.control.fed <- subset(Cuttlefish_Buoyancy.control, Cuttlefish_Buoyancy.control$feeding == 1)
Cuttlefish.days.fed <- Cuttlefish_Buoyancy.control.fed$days_until_hatching_trt
Cuttlefish.floaters.fed <- Cuttlefish_Buoyancy.control.fed$floating
Cuttlefish.control.fed <- data.frame(Cuttlefish.days.fed, Cuttlefish.floaters.fed)
Cuttlefish.control.fed <- Cuttlefish.control.fed[order(Cuttlefish.control.fed$Cuttlefish.days.fed),]
points(x = Cuttlefish.control.fed$Cuttlefish.days.fed, y = (cumsum(Cuttlefish.control.fed$Cuttlefish.floaters.fed)/nrow(Cuttlefish.control.fed)), col = 'red')
lines(x = Cuttlefish.control.fed$Cuttlefish.days.fed, y = (cumsum(Cuttlefish.control.fed$Cuttlefish.floaters.fed)/nrow(Cuttlefish.control.fed)), col = 'red')
#Treatment + Non-Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'A') -> Cuttlefish_Buoyancy.treatment
Cuttlefish_Buoyancy.treatment.non <- subset(Cuttlefish_Buoyancy.treatment, Cuttlefish_Buoyancy.treatment$feeding == 0)
Cuttlefish.treatment.days.non <- Cuttlefish_Buoyancy.treatment.non$days_until_hatching_trt
Cuttlefish.treatment.floaters.non <- Cuttlefish_Buoyancy.treatment.non$floating
Cuttlefish.treatment.non <- data.frame(Cuttlefish.treatment.days.non, Cuttlefish.treatment.floaters.non)
Cuttlefish.treatment.non <- Cuttlefish.treatment.non[order(Cuttlefish.treatment.non$Cuttlefish.treatment.days.non),]
points(x = Cuttlefish.treatment.non$Cuttlefish.treatment.days.non, y = (cumsum(Cuttlefish.treatment.non$Cuttlefish.treatment.floaters.non)/nrow(Cuttlefish.treatment.non)), col = 'green')
lines(x = Cuttlefish.treatment.non$Cuttlefish.treatment.days.non, y = (cumsum(Cuttlefish.treatment.non$Cuttlefish.treatment.floaters.non)/nrow(Cuttlefish.treatment.non)), col = 'green')
#Treatment + Fed
subset(Cuttlefish_Buoyancy, Cuttlefish_Buoyancy$treatment == 'A') -> Cuttlefish_Buoyancy.treatment
Cuttlefish_Buoyancy.treatment.fed <- subset(Cuttlefish_Buoyancy.treatment, Cuttlefish_Buoyancy.treatment$feeding == 1)
Cuttlefish.treatment.days.fed <- Cuttlefish_Buoyancy.treatment.fed$days_until_hatching_trt
Cuttlefish.treatment.floaters.fed <- Cuttlefish_Buoyancy.treatment.fed$floating
Cuttlefish.treatment.fed <- data.frame(Cuttlefish.treatment.days.fed, Cuttlefish.treatment.floaters.fed)
Cuttlefish.treatment.fed <- Cuttlefish.treatment.fed[order(Cuttlefish.treatment.fed$Cuttlefish.treatment.days.fed),]
points(x = Cuttlefish.treatment.fed$Cuttlefish.treatment.days.fed, y = (cumsum(Cuttlefish.treatment.fed$Cuttlefish.treatment.floaters.fed)/nrow(Cuttlefish.treatment.fed)), col = 'orange')
lines(x = Cuttlefish.treatment.fed$Cuttlefish.treatment.days.fed, y = (cumsum(Cuttlefish.treatment.fed$Cuttlefish.treatment.floaters.fed)/nrow(Cuttlefish.treatment.fed)), col = 'orange')
grid(nx = NULL, col = "lightgray", lty = "dotted",lwd = par("lwd"), equilogs = TRUE)
#Adds a faint grid behind line for greater readability
legend(5, 0.9, legend = c('C+NF','C+F','T+NF','T+F'), col = c('blue','red','green','orange'), pch=15)
load("~/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
#Sorts data by deep mean descending
barplot(Biomass.Deep$D.mean, names.arg = Biomass.Deep$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Deep')
#Plots the average Biomass of reef species found within the deep environment
Biomass.Shallow <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$S.mean),]
#Sorts data by shallow mean descending
barplot(Biomass.Shallow$S.mean, names.arg = Biomass.Shallow$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Shallow')
devtools::check()
load("~/R/Trainingdata/data/Biochemical_Oxygen_Demand.rda")
load("~/R/Trainingdata/data/Bird_Sighting_Texas_2018.rda")
load("~/R/Trainingdata/data/Brain_Bodyweight.rda")
load("~/R/Trainingdata/data/Child_Variants.rda")
load("~/R/Trainingdata/data/Childrens_Indoor_Hobbies_During_Lockdown.rda")
load("~/R/Trainingdata/data/Childrens_Outdoor_Hobbies_During_Lockdown.rda")
load("~/R/Trainingdata/data/Cuttlefish_Buoyancy.rda")
load("~/R/Trainingdata/data/Modern_Pollen_Plant_Diversity_Relationships.rda")
load("~/R/Trainingdata/data/Neutrophils.rda")
load("~/R/Trainingdata/data/Plant_CO2_Uptake.rda")
load("~/R/Trainingdata/data/Sleep_Deprivation_CSD.rda")
devtools::check()
.Last.error.trace
devtools::check()
devtools::check()
devtools::check()
Last.error.trace
last.error.trace
devtools::check()
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
#Sorts data by deep mean descending
barplot(Biomass.Deep$D.mean, names.arg = Biomass.Deep$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Deep')
#Plots the average Biomass of reef species found within the deep environment
Biomass.Shallow <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$S.mean),]
#Sorts data by shallow mean descending
barplot(Biomass.Shallow$S.mean, names.arg = Biomass.Shallow$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Shallow')
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
#Sorts data by deep mean descending
barplot(Biomass.Deep$D.mean, names.arg = Biomass.Deep$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Deep')
#Plots the average Biomass of reef species found within the deep environment
Biomass.Shallow <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$S.mean),]
#Sorts data by shallow mean descending
barplot(Biomass.Shallow$S.mean, names.arg = Biomass.Shallow$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Shallow')
devtools::check()
devtools::check()
load("~/R/Trainingdata/data/Bird_Sighting_Texas_2018.rda")
View(Bird_Sighting_Texas_2018)
devtools::check()
readRDS('data/Biomass_of_Herbiverous_Fish.rda')
Biomass_of_Herbiverous_Fish <- readRDS('data/Biomass_of_Herbiverous_Fish.rda')
Biomass_of_Herbiverous_Fish <- readRDS('Biomass_of_Herbiverous_Fish.rda')
setwd("~/R/Trainingdata/data")
Biomass_of_Herbiverous_Fish <- readRDS('Biomass_of_Herbiverous_Fish.rda')
#Biomass_of_Herbivorous_Fish <- readRDS('Biomass_of_Herbivorous_Fish.rda')
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
Biomass_of_Herbiverous_Fish <- readRDS('Biomass_of_Herbivorous_Fish.rda')
Biomass_of_Herbiverous_Fish <- readRDS("D:\Documents\R\Trainingdata\data\Biomass_of_Herbiverous_Fish.rda")
Biomass_of_Herbiverous_Fish <- readRDS("D:/Documents/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
Biomass_of_Herbiverous_Fish <- load("D:/Documents/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
Biomass_of_Herbiverous_Fish <- load("D:/Documents/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbiverous_Fish[order(-Biomass_of_Herbiverous_Fish$D.mean),]
Biomass_of_Herbiverous_Fish <- load("D:/Documents/R/Trainingdata/data/Biomass_of_Herbiverous_Fish.rda")
Biochemical_Oxygen_Demand <- read.delim("~/R/Graph Data/Biochemical_Oxygen_Demand.txt")
View(Biochemical_Oxygen_Demand)
saveRDS(Biochemical_Oxygen_Demand, file = '"D:\Documents\R\Trainingdata\data\Biochemical_Oxygen_Demand.rds"')
saveRDS(Biochemical_Oxygen_Demand, file = "D:/Documents/R/Trainingdata/data/Biochemical_Oxygen_Demand.rds")
Biomass_of_Herbiverous_Fish <- read.delim("~/R/Graph Data/Biomass_of_Herbiverous_Fish.txt")
View(Biomass_of_Herbiverous_Fish)
saveRDS(Biochemical_Oxygen_Demand, file = "D:/Documents/R/Trainingdata/data/Biomass_of_Herbivorous_Fish.rds")
Bird_Sighting_Texas_2018 <- read.delim("~/R/Graph Data/Bird_Sighting_Texas_2018.txt")
View(Bird_Sighting_Texas_2018)
View(Bird_Sighting_Texas_2018)
saveRDS(Biochemical_Oxygen_Demand, file = "D:/Documents/R/Trainingdata/data/Bird_Sighting_Texas_2018.rds")
Bird_Sighting_Texas_2018 <- readRDS("~/R/Trainingdata/data/Bird_Sighting_Texas_2018.rds")
Biomass_of_Herbivorous_Fish <- readRDS("D:\Documents\R\Trainingdata\data\Biomass_of_Herbivorous_Fish.rds")
Biomass_of_Herbivorous_Fish <- readRDS("D:/Documents/R/Trainingdata/data/Biomass_of_Herbivorous_Fish.rds")
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbivorous_Fish[order(-Biomass_of_Herbivorous_Fish$D.mean),]
Bird_Sighting_Texas_2018 <- readRDS("~/R/Trainingdata/data/Bird_Sighting_Texas_2018.rds")
Biomass_of_Herbiverous_Fish <- read.delim("~/R/Graph Data/Biomass_of_Herbiverous_Fish.txt")
View(Biomass_of_Herbiverous_Fish)
View(Biomass_of_Herbivorous_Fish)
Biomass_of_Herbiverous_Fish <- read.delim("~/R/Graph Data/Biomass_of_Herbiverous_Fish.txt")
View(Biomass_of_Herbiverous_Fish)
saveRDS(Biomass_of_Herbiverous_Fish, file = "D:/Documents/R/Trainingdata/data/Biomass_of_Herbivorous_Fish.rds")
Bird_Sighting_Texas_2018 <- read.delim("~/R/Graph Data/Bird_Sighting_Texas_2018.txt")
View(Bird_Sighting_Texas_2018)
saveRDS(Bird_Sighting_Texas_2018, file = "D:/Documents/R/Trainingdata/data/Bird_Sighting_Texas_2018.rds")
Biomass_of_Herbivorous_Fish <- readRDS("D:/Documents/R/Trainingdata/data/Biomass_of_Herbivorous_Fish.rds")
par(mfrow = c(2,1), mar = c(8,3,2,3))
#Alters plot dimensions so the long species names fit well and allows two plots to be displayed and compared
Biomass.Deep <- Biomass_of_Herbivorous_Fish[order(-Biomass_of_Herbivorous_Fish$D.mean),]
#Sorts data by deep mean descending
barplot(Biomass.Deep$D.mean, names.arg = Biomass.Deep$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Deep')
#Plots the average Biomass of reef species found within the deep environment
Biomass.Shallow <- Biomass_of_Herbivorous_Fish[order(-Biomass_of_Herbivorous_Fish$S.mean),]
#Sorts data by shallow mean descending
barplot(Biomass.Shallow$S.mean, names.arg = Biomass.Shallow$Species, las = 2, cex.names = 0.8, ylim = c(0, 40), main = 'Shallow')
BOD <- readRDS('D:/Documents/R/Trainingdata/data/Biochemical_Oxygen_Demand')
BOD <- readRDS('D:/Documents/R/Trainingdata/data/Biochemical_Oxygen_Demand.rds')
plot(x = BOD$Time, y = BOD$demand, type = 'l', lwd = 2, main = 'Biochemical Oxygen Demand Over Time', xlab = 'Time', ylab = 'Oxygen Usage', col = 'red')
#Two variables plotted against each other as line graph
points(x = BOD$Time, y = BOD$demand)
grid(nx = NULL, col = "lightgray", lty = "dotted",lwd = par("lwd"), equilogs = TRUE)
#Adds a faint grid behind line for greater readability
Bird_Sighting_Texas_2018 <- readRDS('D:/Documents/R/Trainingdata/data/Bird_Sighting_Texas_2018.rds')
Brain_Bodyweight <- read.delim("~/R/Graph Data/Brain_Bodyweight.txt")
View(Brain_Bodyweight)
Child_Variants <- read.delim("~/R/Graph Data/Child_Variants.txt")
View(Child_Variants)
saveRDS(Child_Variants, file = )"D:/Documents/R/Trainingdata/data/Child_Variants.rds"
saveRDS(Child_Variants, file = "D:/Documents/R/Trainingdata/data/Child_Variants.rds")"D:/Documents/R/Trainingdata/data/Bird_Sighting_Texas_2018.rds")
saveRDS(Child_Variants, file = "D:/Documents/R/Trainingdata/data/Child_Variants.rds")
saveRDS(Brain_Bodyweight, file = "D:/Documents/R/Trainingdata/data/Brain_Bodyweight.rds")
Childrens_Indoor_Hobbies_During_Lockdown <- read.delim("~/R/Graph Data/Childrens_Indoor_Hobbies_During_Lockdown.txt")
View(Childrens_Indoor_Hobbies_During_Lockdown)
Childrens_Outdoor_Hobbies_During_Lockdown <- read.delim("~/R/Graph Data/Childrens_Outdoor_Hobbies_During_Lockdown.txt")
View(Childrens_Outdoor_Hobbies_During_Lockdown)
saveRDS(Childrens_Indoor_Hobbies_During_Lockdown, file = "D:/Documents/R/Trainingdata/data/Childrens_Indoor_Hobbies_During_Lockdown.rds")
saveRDS(Childrens_Outdoor_Hobbies_During_Lockdown, file = "D:/Documents/R/Trainingdata/data/Childrens_Outdoor_Hobbies_During_Lockdown.rds")
Cuttlefish_Buoyancy <- read.delim("~/R/Graph Data/Cuttlefish_Buoyancy.txt")
View(Cuttlefish_Buoyancy)
Modern_Pollen_Plant_Diversity_Relationships <- read.delim("~/R/Graph Data/Modern_Pollen_Plant_Diversity_Relationships.txt", header=FALSE)
View(Modern_Pollen_Plant_Diversity_Relationships)
Neutrophils <- read.delim("~/R/Graph Data/Neutrophils.txt", header=FALSE)
View(Neutrophils)
Plant_CO2_Uptake <- read.delim("~/R/Graph Data/Plant_CO2_Uptake.txt")
View(Plant_CO2_Uptake)
Sleep_Deprivation_CSD <- read.delim("~/R/Graph Data/Sleep_Deprivation_CSD.txt")
View(Sleep_Deprivation_CSD)
saveRDS(Cuttlefish_Buoyancy, file = "D:/Documents/R/Trainingdata/data/Cuttlefish_Buoyancy")
saveRDS(Modern_Pollen_Plant_Diversity_Relationships, file = "D:/Documents/R/Trainingdata/data/Modern_Pollen_Plant_Diversity_Relationships")
saveRDS(Neutrophils, file = "D:/Documents/R/Trainingdata/data/Neutrophils")
saveRDS(Plant_CO2_Uptake, file = "D:/Documents/R/Trainingdata/data/Plant_CO2_Uptake")
saveRDS(Sleep_Deprivation_CSD, file = "D:/Documents/R/Trainingdata/data/Sleep_Deprivation_CSD")
saveRDS(Cuttlefish_Buoyancy, file = "D:/Documents/R/Trainingdata/data/Cuttlefish_Buoyancy.rds")
saveRDS(Modern_Pollen_Plant_Diversity_Relationships, file = "D:/Documents/R/Trainingdata/data/Modern_Pollen_Plant_Diversity_Relationships.rds")
saveRDS(Neutrophils, file = "D:/Documents/R/Trainingdata/data/Neutrophils.rds")
saveRDS(Plant_CO2_Uptake, file = "D:/Documents/R/Trainingdata/data/Plant_CO2_Uptake.rds")
saveRDS(Sleep_Deprivation_CSD, file = "D:/Documents/R/Trainingdata/data/Sleep_Deprivation_CSD.rds")
Brain_Bodyweight <- readRDS()'D:/Documents/R/Trainingdata/data/Brain_Bodyweight.rds'
Brain_Bodyweight <- readRDS('D:/Documents/R/Trainingdata/data/Brain_Bodyweight.rds')
plot(Brain_Bodyweight$Body.weight..kg., Brain_Bodyweight$Brain.weight..g., main = 'Scatter of Brain vs Body-weight')
#simple scatter-plot of unmodified values, not very useful therefore, using the logged data is preferable
Brain_Bodyweight <- Brain_Bodyweight[order(Brain_Bodyweight$Log.body.weight..kg.),]
#orders the data-frame by body-weight ascending
plot(x = Brain_Bodyweight$log.brain, y = Brain_Bodyweight$log.body, type = 'l', col= 'red', lwd=2, xlab = 'Log brain-weight', ylab = 'Log body-weight')
#line showing correlation between logged brain and body weight
points(x = Brain_Bodyweight$log.brain, y = Brain_Bodyweight$log.body, col = 'black', pch = 16)
#adds the points of each animals values
text(Brain_Bodyweight$log.brain, Brain_Bodyweight$log.body, labels = Brain_Bodyweight$Species, cex = 0.6, pos = 1)
#adds the species name to each point
#adds the species name to each point
#adds the species name to each point
Child_Variants <- readRDS('D:/Documents/R/Trainingdata/data/Child_Variants.rds')
mean(Child_Variants$MutantReadPercent)
#returns mean of the mutant percent column
logic.child <- Child_Variants$MutantReadPercent >=70
#logic test that informs us which values and therefore rows have mutant reads over 70%
filter.child <- Child_Variants[logic.child,]
#creates a new data-frame with just those TRUE values from the logic test preformed prior
sum(filter.child$REF == 'G')
sum(filter.child$REF == 'A')
sum(filter.child$REF == 'T')
sum(filter.child$REF == 'C')
#sums the mutation counts for each base
mutation.counts <- c(2347,2584,2616,2288)
#places the summed counts into a vector
hist(Child_Variants$MutantReadPercent, breaks = 40, main = 'Mutation frequency Histogram', ylim = c(0, 2000), xlab = 'Mutant Read Percent')
#plots the mutant reads column
boxplot(Child_Variants$MutantReadPercent)
boxplot(filter.child$MutantReadPercent)
#plots of overall distribution and the filtered set
colours.graph <- c('black','green','red','blue')
barplot(mutation.counts, col=colours.graph, names.arg = c('G','A','T','C'), ylim = c(0, 3000))
#plots the total mutation counts from the filtered subset
Childrens_Indoor_Hobbies_During_Lockdown <- readRDS('D:/Documents/R/Trainingdata/data/Childrens_Indoor_Hobbies_During_Lockdown.rds')
Childrens_Outdoor_Hobbies_During_Lockdown <- readRDS('D:/Documents/R/Trainingdata/data/Childrens_Outdoor_Hobbies_During_Lockdown.rds')
par(mfrow = c(2,1), mar = c(0,5,0,2))
#alters margins and allows for two plots to be displayed
pie(Childrens_Indoor_Hobbies_During_Lockdown$X., labels = Childrens_Indoor_Hobbies_During_Lockdown$Hobby, cex = 0.6)
pie(Childrens_Outdoor_Hobbies_During_Lockdown$X., labels = Childrens_Outdoor_Hobbies_During_Lockdown$Outdoor.Hobby, cex = 0.7)
Cuttlefish_Buoyancy <- readRDS('D:/Documents/R/Trainingdata/data/Cuttlefish_Buoyancy.rds')
Modern_Pollen_Plant_Diversity_Relationships <- readRDS('D:/Documents/R/Trainingdata/data/Modern_Pollen_Plant_Diversity_Relationships.rds')
Neutrophils <- readRDS('D:/Documents/R/Trainingdata/data/Neutrophils.rds')
Plant_CO2_Uptake <- readRDS('D:/Documents/R/Trainingdata/data/Plant_CO2_Uptake.rds')
Sleep_Deprivation_CSD <- readRDS('D:/Documents/R/Trainingdata/data/Sleep_Deprivation_CSD.rds')
devtools::check()
Neutrophils <- readRDS("~/R/Trainingdata/data/Neutrophils.rds")
View(Neutrophils)
Plant_CO2_Uptake <- readRDS("~/R/Trainingdata/data/Plant_CO2_Uptake.rds")
View(Plant_CO2_Uptake)
Neutrophils <- read.delim("~/R/Graph Data/Neutrophils.txt")
View(Neutrophils)
Neutrophils <- readRDS('D:/Documents/R/Trainingdata/data/Neutrophils.rds')
Neutrophils <- readRDS("~/R/Trainingdata/data/Neutrophils.rds")
View(Neutrophils)
Neutrophils <- read.delim("~/R/Graph Data/Neutrophils.txt")
View(Neutrophils)
saveRDS(Neutrophils, file = "D:/Documents/R/Trainingdata/data/Neutrophils.rds")
Neutrophils <- readRDS('D:/Documents/R/Trainingdata/data/Neutrophils.rds')
View(Neutrophils)
library(Trainingdata)
library(Trainingdata)
library(Trainingdata)
Brain_Bodyweight <- readRDS("~/R/Trainingdata/data/Brain_Bodyweight.rds")
View(Brain_Bodyweight)
Brain_Bodyweight <- readRDS("~/R/Trainingdata/data/Brain_Bodyweight.rds")
?Biochemical_Oxygen_Demand
library(Trainingdata)
